#!/bin/sh

# Slackware build script for v4l2loopback

# Copyright 2014 Papitux <papitux.br[at]gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is permitted provided
# that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED  BY THE AUTHOR  ''AS IS''  AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING,  BUT NOT LIMITED TO,  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
# INCIDENTAL,  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE,  DATA,  OR PROFITS;  OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED  AND ON ANY THEORY OF LIABILITY,  WHETHER IN CONTRACT,  STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=v4l2loopback
VERSION=${VERSION:-0.8.0}
KVER=${KVER:-$(uname -r)}
#KSRC=${KSRC:-/lib/modules/$KVER/build}
BUILD=${BUILD:-1}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/PpTux}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486"
  SLKLDFLAGS=""; LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"; CHOST="i486"
  SLKLDFLAGS=""; LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"; CHOST="x86_64"
  SLKLDFLAGS="-L/lib64 -L/usr/lib64"; LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.?z*
cd $PRGNAM-$VERSION

# Build with kernel 3.18+
#zcat $CWD/kernel-318.patch.gz | patch -p1 --verbose || exit 1

# Path fix and mod for flash:
( cd examples/
  sed -i "s/\.\/utils\///" restarting-writer.sh || exit 1
  sed "s/YUV420/YVU420/" yuv4mpeg_to_v4l2.c > \
    yuv4mpeg_to_v4l2_flash.c || exit 1
  sed -i "1s/$/ yuv4mpeg_to_v4l2_flash/" Makefile || exit 1 )

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

LDFLAGS="$SLKLDFLAGS" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \

make all || exit 1
make PREFIX=/usr MANDIR=/usr/man DESTDIR=$PKG install-utils install-man || exit 1

mkdir -p $PKG/lib/modules/$KVER/localmod
install -m644 $PRGNAM.ko $PKG/lib/modules/$KVER/localmod/

( cd  examples/ && make all || exit 1)

install -m755 examples/yuv4mpeg_to_v4l2{,_flash} \
  $PKG/usr/bin/

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -name "*.?" -exec gzip -9f {} \;
 for i in $(find $PKG/usr/man -type l -name "*.?"); do
   ln -s $( readlink $i ).gz $i.gz ; rm $i
 done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a AUTHORS COPYING NEWS README TODO doc/v4l2* \
  $PKG/usr/doc/$PRGNAM-$VERSION
cp -a examples/restarting-writer.sh \
  $PKG/usr/doc/$PRGNAM-$VERSION/restarting-writer.example
sed -n '22,30p' examples/README >\
  $PKG/usr/doc/$PRGNAM-$VERSION/README.example
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

if [ -r ChangeLog ]; then
  DOCSDIR=$(echo $PKG/usr/doc/${PRGNAM}-$VERSION)
  cat ChangeLog | head -n 500 > $DOCSDIR/ChangeLog
  touch -r ChangeLog $DOCSDIR/ChangeLog
fi

find $PKG/usr/doc/$PRGNAM-$VERSION -type d -print0 | xargs -0 chmod 0755
find $PKG/usr/doc/$PRGNAM-$VERSION -type f -print0 | xargs -0 chmod 0644

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
if [ -f $CWD/doinst.sh ]; then
  cat $CWD/doinst.sh >> $PKG/install/doinst.sh
else
cat >> $PKG/install/doinst.sh << EOF
# Only run depmod on matching running kernel
# Slackware will run depmod anyway on reboot:
MYMODVER=$KVER
MYKERNEL=\`uname -r\`
if [ "\$MYKERNEL" = "\$MYMODVER" ]; then
  if [ -x sbin/depmod ]; then
    chroot . /sbin/depmod -a \$MYKERNEL 1> /dev/null 2> /dev/null
  fi
fi

# Determine the rc.modules to use:
if [ -f etc/rc.d/rc.modules.local ]; then
  RCMODULES="etc/rc.d/rc.modules.local"
elif [ -f etc/rc.d/rc.modules-$KVER ]; then
  RCMODULES="etc/rc.d/rc.modules-$KVER"
else
  RCMODULES="etc/rc.d/rc.modules"
fi

# Make sure the module gets loaded on boot:
if ! grep -q "$PRGNAM" \${RCMODULES} ; then
  echo "" >> \${RCMODULES}
  echo "# Load the v4l2loopback kernel module" >> \${RCMODULES}
  echo "#/sbin/modprobe $PRGNAM" >> \${RCMODULES}
  echo "##"
  echo "## Edit \${RCMODULES} if the module needs manual loading."
  echo "##"
fi
EOF
fi

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD.${PKGTYPE:-txz}
