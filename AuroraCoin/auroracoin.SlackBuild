#!/bin/sh

# Slackware build script for auroracoin

# Copyright 2012 nomnombtc <nomnombtc@arcor.de>
# Copyright 2014 Papitux <papitux.br[at]gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is permitted provided
# that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED  BY THE AUTHOR  ''AS IS''  AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING,  BUT NOT LIMITED TO,  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
# INCIDENTAL,  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE,  DATA,  OR PROFITS;  OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED  AND ON ANY THEORY OF LIABILITY,  WHETHER IN CONTRACT,  STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=auroracoin
VERSION=${VERSION:-1.2.0.0}
ARCH=${ARCH:-x86_64}
BUILD=${BUILD:-1}

if [ -e $CWD/machine.conf ]; then
  . $CWD/machine.conf ]
else
  MARCH=$( uname -m )
  if [ -z "$ARCH" ]; then
    case "$MARCH" in
      i?86)    export ARCH=i486 ;;
      arm*)    export ARCH=arm ;;
      *)       export ARCH=$MARCH ;;
    esac
  fi
  if [ "$ARCH" = "i486" ]; then
    SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486"
    SLKLDFLAGS=""; LIBDIRSUFFIX=""
  elif [ "$ARCH" = "i686" ]; then
    SLKCFLAGS="-O2 -march=i686 -mtune=i686"; CHOST="i486"
    SLKLDFLAGS=""; LIBDIRSUFFIX=""
  elif [ "$ARCH" = "x86_64" ]; then
    SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"; CHOST="x86_64"
    SLKLDFLAGS="-L/lib64 -L/usr/lib64"; LIBDIRSUFFIX="64"
  else
    SLKCFLAGS="-O2"
    LIBDIRSUFFIX=""
  fi
fi

case "$ARCH" in
    arm*) TARGET=$ARCH-slackware-linux-gnueabi ;;
    *)    TARGET=$ARCH-slackware-linux ;;
esac

set -e

NUMJOBS=${NUMJOBS:-" -j4 "}

CWD=$(pwd)
TMP=${TMP:-/tmp/PpTux}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ ! -d $OUTPUT ]; then
  mkdir -p $OUTPUT
fi

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $PRGNAM-project

git clone https://github.com/baldurodinsson/auroracoin-project.git

cd $PRGNAM-project

export COMMIT=$(git log --format="%h" | head -n1)

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# build auroracoin-qt
qmake \
  QMAKE_CFLAGS+="$SLKCFLAGS" \
  QMAKE_CXXFLAGS+="$SLKCFLAGS" \
  USE_UPNP=- \
  USE_QRCODE=1 \
  USE_SSL=1

make $NUMJOBS || make || exit 1

# build auroracoind
cd src

# disable UPNP
 sed -i 's/USE_UPNP:=0/USE_UPNP:=/g' makefile.unix

# disable static linking
 sed -i 's/Bstatic/Bdynamic/g' makefile.unix

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
make $NUMJOBS -f makefile.unix \
  AuroraCoind \
  USE_SSL=1
cd -

mkdir -p $PKG/usr/{bin,man/man{1,5}}
mkdir -p $PKG/usr/share/{applications,kde4/services,pixmaps}

install -m 0755 auroracoin-qt $PKG/usr/bin/
install -m 0755 src/AuroraCoind $PKG/usr/bin/

install -m 0644 contrib/debian/manpages/bitcoind.1 $PKG/usr/man/man1/auroracoin.1
install -m 0644 contrib/debian/manpages/bitcoin.conf.5 $PKG/usr/man/man5/auroracoin.conf.5

install -m 0644 src/qt/res/icons/bitcoin.png $PKG/usr/share/pixmaps/auroracoin.png
install -m 0644 $CWD/auroracoin-qt.desktop $PKG/usr/share/applications/
install -m 0644 $CWD/auroracoin.protocol $PKG/usr/share/kde4/services/

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

if [ -d $PKG/usr/share/man ];then
mkdir -p $PKG/usr/man
mv $PKG/usr/share/man/* $PKG/usr/man
rm -rf $PKG/usr/share/man
fi

if [ -d $PKG/usr/man ]; then
  find $PKG/usr/man -type f -name "*.?" -exec gzip -9f {} \;
  for i in $(find $PKG/usr/man -type l -name "*.?"); do
  ln -s $( readlink $i ).gz $i.gz ; rm $i
  done
fi

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a COPYING INSTALL README* \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
cat $CWD/$PRGNAM.conf > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.conf

find $PKG/usr/doc -type f -exec chmod 644 {} \;
find $PKG/usr/doc -type d -exec chmod 755 {} \;
chown -R root:root $PKG/usr/doc/$PRGNAM-$VERSION

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
if [ -f $CWD/doinst.sh ]; then
  cat $CWD/doinst.sh >> $PKG/install/doinst.sh
fi

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION.$COMMIT-$ARCH-$BUILD.${PKGTYPE:-txz}
