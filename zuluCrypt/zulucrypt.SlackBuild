#!/bin/sh

# Slackware build script for zuluCrypt

# Copyright 2014 Papitux <papitux.br[at]gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is permitted provided
# that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED  BY THE AUTHOR  ''AS IS''  AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING,  BUT NOT LIMITED TO,  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
# INCIDENTAL,  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE,  DATA,  OR PROFITS;  OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED  AND ON ANY THEORY OF LIABILITY,  WHETHER IN CONTRACT,  STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=zulucrypt
PKGNAM=zuluCrypt
VERSION=${VERSION:-4.7.5}
BUILD=${BUILD:-1}

if [ -e $CWD/machine.conf ]; then
  . $CWD/machine.conf ]
else
  MARCH=$( uname -m )
  if [ -z "$ARCH" ]; then
    case "$MARCH" in
      i?86)    export ARCH=i486 ;;
      arm*)    export ARCH=arm ;;
      *)       export ARCH=$MARCH ;;
    esac
  fi
  if [ "$ARCH" = "i486" ]; then
    SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486"
    SLKLDFLAGS=""; LIBDIRSUFFIX=""
  elif [ "$ARCH" = "i686" ]; then
    SLKCFLAGS="-O2 -march=i686 -mtune=i686"; CHOST="i486"
    SLKLDFLAGS=""; LIBDIRSUFFIX=""
  elif [ "$ARCH" = "x86_64" ]; then
    SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"; CHOST="x86_64"
    SLKLDFLAGS="-L/lib64 -L/usr/lib64"; LIBDIRSUFFIX="64"
  else
    SLKCFLAGS="-O2"
    LIBDIRSUFFIX=""
  fi
fi

case "$ARCH" in
    arm*) TARGET=$ARCH-slackware-linux-gnueabi ;;
    *)    TARGET=$ARCH-slackware-linux ;;
esac

set -e

NUMJOBS=${NUMJOBS:-" -j4 "}

CWD=$(pwd)
TMP=${TMP:-/tmp/PpTux}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ ! -d $OUTPUT ]; then
  mkdir -p $OUTPUT
fi

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $PKGNAM-$VERSION
tar xvf $CWD/$PKGNAM-$VERSION.tar.?z*
cd $PKGNAM-$VERSION

# Some fix?
#zcat $CWD/patch.patch.gz | patch -p1 --verbose || exit 1

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

export QTDIR=$(qmake -query QT_INSTALL_PREFIX)
export CFLAGS="$SLKCFLAGS"
export LDFLAGS="$SLKLDFLAGS"
export CXXFLAGS="$SLKCFLAGS"

mkdir -p build
( cd build

  cmake .. \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DSYSCONF_INSTALL_DIR=/etc \
    -DINCLUDE_INSTALL_DIR=/usr/include \
    -DCMAKE_INSTALL_LIBDIR=/usr/lib${LIBDIRSUFFIX} \
    -DLIB_INSTALL_DIR=/usr/lib${LIBDIRSUFFIX} \
    -DSHARE_INSTALL_PREFIX=/usr/share \
    -DMAN_INSTALL_DIR=/usr/man \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_SHARED_LIBS=ON \
    -DCMAKE_SKIP_RPATH=ON \
    -DNOKDE=true \
    -DNOGNOME=true \
    -DUDEVSUPPORT=true \
    -DHOMEMOUNTPREFIX=true \
    -DQT5=false \
    -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
    || exit 1

  make $NUMJOBS || make|| exit 1
  make install DESTDIR=$PKG || exit 1

) || exit 1

find $PKG -type f -name ".gitignore" -exec rm {} \;

rm -f $PKG/usr/lib*/*.a

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

if [ -d $PKG/usr/share/man ];then
mkdir -p $PKG/usr/man
mv $PKG/usr/share/man/* $PKG/usr/man
rm -rf $PKG/usr/share/man
fi

if [ -d $PKG/usr/man ]; then
  find $PKG/usr/man -type f -name "*.?" -exec gzip -9f {} \;
  for i in $(find $PKG/usr/man -type l -name "*.?"); do
  ln -s $( readlink $i ).gz $i.gz ; rm $i
  done
fi

if [ -d $PKG/usr/share/info ];then
mkdir -p $PKG/usr/info
mv $PKG/usr/share/info/* $PKG/usr/info
rm -rf $PKG/usr/share/info
fi 

if [ -d $PKG/usr/info ]; then
  find $PKG/usr/info -type f -exec gzip -9 {} \;
  ( cd $PKG/usr/info
   if [ -f dir ];then
     rm dir
   fi
   if [ -f dir.gz ];then
    rm dir.gz
   fi )
fi

if [ -d $PKG/usr/locale ]; then
  mv $PKG/usr/locale $PKG/usr/share/ || exit 1
fi

sed -i 's/^Icon=*.*/Icon=zuluCrypt/g' \
  $PKG/usr/share/applications/zuluCrypt.desktop
sed -i 's/^Icon=*.*/Icon=zuluMount/g' \
  $PKG/usr/share/applications/zuluMount.desktop

( cd $TMP/$PKGNAM-$VERSION/zuluCrypt-gui  
  convert zuluCrypt.png -resize 128x120 zuluCryptz.png
  cd $TMP/$PKGNAM-$VERSION/zuluMount-gui  
  convert zuluMount.png -resize 128x120 zuluMountz.png )

install -m644 $TMP/$PKGNAM-$VERSION/zuluCrypt-gui/zuluCryptz.png \
  $PKG/usr/share/pixmaps/zuluCrypt.png

install -m644 $TMP/$PKGNAM-$VERSION/zuluMount-gui/zuluMountz.png \
  $PKG/usr/share/pixmaps/zuluMount.png

for res in 16 32 48 64 96 128 256; do
  mkdir -p  $PKG/usr/share/icons/hicolor/${res}x${res}/apps
  convert $TMP/$PKGNAM-$VERSION/zuluCrypt-gui/zuluCrypt.png -resize ${res}x${res} \
  $PKG/usr/share/icons/hicolor/${res}x${res}/apps/zuluCrypt.png  
done

for res in 16 32 48 64 96 128 256; do
  convert $TMP/$PKGNAM-$VERSION/zuluMount-gui/zuluMount.png -resize ${res}x${res} \
  $PKG/usr/share/icons/hicolor/${res}x${res}/apps/zuluMount.png  
done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  $CWD/FAQ BUILD_INSTRUCTIONS GPL* *README* TODO docs/zuluCrypt.pdf \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

if [ -r ChangeLog ]; then
  DOCSDIR=$(echo $PKG/usr/doc/${PRGNAM}-$VERSION)
  cat ChangeLog | head -n 1000 > $DOCSDIR/ChangeLog
  touch -r ChangeLog $DOCSDIR/ChangeLog
fi

find $PKG/usr/doc -type f -exec chmod 644 {} \;
find $PKG/usr/doc -type d -exec chmod 755 {} \;
find $PKG/usr/doc/$PRGNAM-$VERSION -type f -size 0 -print0 | xargs -0 rm -f
chown -R root:root $PKG/usr/doc/$PRGNAM-$VERSION

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
if [ -f $CWD/doinst.sh ]; then
  cat $CWD/doinst.sh >> $PKG/install/doinst.sh
fi

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD.${PKGTYPE:-txz}
