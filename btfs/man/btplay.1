.TH "btplay" 1 "2016-01-05" "btplay"
.SH NAME
btplay \- Directly play video torrents using btfs.
.SH SYNOPSIS
.B btplay
[OPTIONS]... torrentlink
.SH DESCRIPTION
btfs uses fuse (filesystem in user space) to expose a bittorrent source as a normal directory on your filesystem.

btplay is a wrapper for btfs that mounts and plays the video directly without a user having to specify a mount point. You can pass either a .torrent link or a magnet link contained in single quotation marks.

.SH OPTIONS
Usage: btplay [OPTIONS...] torrentlink

.B BTFS Options

\fB\-v, \-\-version\fR
.RS
Show version information.
.RE

\fB\-h, \-\-help\fR
.RS
Displays usage for the tool.
.RE

\fB\-b, \-\-browse\-only\fR
.RS
Download metadata only.
.RE

\fB\-k, \-\-keep\fR
.RS
Keep files after unmount.
.RE


.B FUSE Options

\fB\-d, \-o debug\fR
.RS
Enable debug output (implies \-f).
.RE

\fB\-f\fR
.RS
Foreground operation.
.RE

\fB\-s\fR
.RS
Disable multi-threaded operation.
.RE

\fB\-o allow_other\fR
.RS
Allow access to other users.
.RE

\fB\-o allow_root\fR
.RS
Allow access to root.
.RE

\fB\-o auto_unmount\fR
.RS
Auto unmount on process termination.
.RE

\fB\-o nonempty\fR
.RS
Allow mounts over non-empty file/dir.
.RE

\fB\-o default_permissions\fR
.RS
Enable permission checking by kernel.
.RE

\fB\-o fsname=NAME\fR
.RS
Set filesystem name.
.RE

\fB\-o suptype=NAME\fR
.RS
Set filesystem type.
.RE

\fB\-o large_read\fR
.RS
Issue large read requests.
.RE

\fB\-o max_read=N\fR
.RS
Set maximum size of read requests.
.RE

\fB\-o hard_remove\fR
.RS
Immediate removal (don't hide files).
.RE

\fB\-o use_ino\fR
.RS
Let filesystem set inode numbers.
.RE

\fB\-o readdir_ino\fR
.RS
Try to fill in d_ino in readdir.
.RE

\fB\-o direct_io\fR
.RS
Use direct I/O.
.RE

\fB\-o kernel_cache\fR
.RS
Cache files in kernel.
.RE

\fB\-o [no]auto_cache\fR
.RS
Enable caching based on modification times (off).
.RE

\fB\-o umask=M\fR
.RS
Set file permissions (octal).
.RE

\fB\-o uid=N\fR
.RS
Set file owner.
.RE

\fB\-o gid=N\fR
.RS
Set file group.
.RE

\fB\-o entry_timeout=T\fR
.RS
Cache timeout for names (1.0s).
.RE

\fB\-o negative_timeout=T\fR
.RS
Cache timeout for deleted names (0.0s).
.RE

\fB\-o attr_timeout=T\fR
.RS
Cache timeout for attributes (1.0s).
.RE

\fB\-o ac_attr_timeout=T\fR
.RS
Auto cache timeout for attributes (attr_timeout)
.RE

\fB\-o noforget\fR
.RS
Never forget cached inodes.
.RE

\fB\-o remember=T\fR
.RS
Remember cached inodes fot T seconds (0s).
.RE

\fB\-o nopath\fR
.RS
Don't supply path if not necessary.
.RE

\fB\-o intr\fR
.RS
Allow requests to be interrupted.
.RE

\fB\-o intr_signal=NUM\fR
.RS
Signal to send on interript (10).
.RE

\fB\-o modules=M1[:M2...]\fR
.RS
Names of modules to push onto filesystem stack.
.RE

.B Module Options

.B [iconv]

\fB\-o from_code=CHARSET\fR
.RS
Original encoding of file names (default: UTF-8).
.RE

\fB\-o to_code=CHARSET\fR
.RS
New encoding of the file names (default: UTF-8).
.RE

.B [subdir]

\fB\-o subdir=DIR\fR
.RS
Prepend this directory to all paths (madatory).
.RE

\fB\-o [no]rellinks\fR
.RS
Transform absolute symlinks to relative.
.RE

.SH REPORTING BUGS
Please file issues on the GitHub bug tracker: https://github.com/johang/btfs/issues

.SH "SEE ALSO"
.BR fuse (1),
.BR btfs (1)

.SH AUTHORS
This manual page was written by Jonathan Carter <jonathan@ubuntu.com>
btplay was written by Johan Gunnarsson <johan.gunnarsson@gmail.com>
