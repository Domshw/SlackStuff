#!/bin/sh

# Slackware build script for libsoxr

# Copyright 2015 Papitux <papitux.br[at]gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is permitted provided
# that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED  BY THE AUTHOR  ''AS IS''  AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING,  BUT NOT LIMITED TO,  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
# INCIDENTAL,  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE,  DATA,  OR PROFITS;  OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED  AND ON ANY THEORY OF LIABILITY,  WHETHER IN CONTRACT,  STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PKGNAM=libsoxr
PRGNAM=soxr
VERSION=${VERSION:-0.1.1}
BUILD=${BUILD:-1}

if [ -e $(pwd)/machine.conf ]; then
  . $(pwd)/machine.conf ]
else
  MARCH=$( uname -m )
  if [ -z "$ARCH" ]; then
    case "$MARCH" in
      i?86)    export ARCH=i486 ;;
      arm*)    export ARCH=arm ;;
      *)       export ARCH=$MARCH ;;
    esac
  fi
  if [ "$ARCH" = "i486" ]; then
    SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486"
    SLKLDFLAGS=""; LIBDIRSUFFIX=""
  elif [ "$ARCH" = "i686" ]; then
    SLKCFLAGS="-O2 -march=i686 -mtune=i686"; CHOST="i486"
    SLKLDFLAGS=""; LIBDIRSUFFIX=""
  elif [ "$ARCH" = "x86_64" ]; then
    SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"; CHOST="x86_64"
    SLKLDFLAGS="-L/lib64 -L/usr/lib64"; LIBDIRSUFFIX="64"
  else
    SLKCFLAGS="-O2"
    LIBDIRSUFFIX=""
  fi
fi

set -e

NUMJOBS=${NUMJOBS:-" -j4 "}

CWD=$(pwd)
TMP=${TMP:-/tmp/PpTux}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ ! -d $OUTPUT ]; then
  mkdir -p $OUTPUT
fi

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $PRGNAM-$VERSION-Source
tar xvf $CWD/$PRGNAM-$VERSION-Source.tar.?z*
cd $PRGNAM-$VERSION-Source

# Fix ineffectual SOXR_MINIMUM_PHASE and 
# SOXR_INTERMEDIATE_PHASE in soxr_quality_spec
zcat $CWD/fix-soxr.patch.gz | patch -p1 --verbose || exit 1

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

#  -DCMAKE_SKIP_RPATH=ON \
CFLAGS="$SLKCFLAGS" \
LDFLAGS="$SLKLDFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
 cmake -Wno-dev \
  -DBUILD_EXAMPLES=OFF \
  -DBUILD_SHARED_LIBS=ON \
  -DVISIBILITY_HIDDENL=ON \
  -DDOC_INSTALL_DIR=/usr/doc/$PKGNAM-$VERSION \
  -DCMAKE_BUILD_TYPE=Release \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
  -DLIB_INSTALL_DIR=/usr/lib${LIBDIRSUFFIX} \
  -DWITH_AVFFT=ON \
  -DWITH_PFFFT=ON \
  -DWITH_SIMD=ON \
  -DWITH_OPENMP=ON \
  -DWITH_LSR_BINDINGS=ON \
  -DWITH_DOUBLE_PRECISION=ON \
  .
make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

if [ -d $PKG/usr/share/man ];then
mkdir -p $PKG/usr/man
mv $PKG/usr/share/man/* $PKG/usr/man
rm -rf $PKG/usr/share/man
fi

if [ -d $PKG/usr/man ]; then
  find $PKG/usr/man -type f -name "*.?" -exec gzip -9f {} \;
  for i in $(find $PKG/usr/man -type l -name "*.?"); do
  ln -s $( readlink $i ).gz $i.gz ; rm $i
  done
fi

if [ -d $PKG/usr/share/info ];then
mkdir -p $PKG/usr/info
mv $PKG/usr/share/info/* $PKG/usr/info
rm -rf $PKG/usr/share/info
fi 

if [ -d $PKG/usr/info ]; then
  find $PKG/usr/info -type f -exec gzip -9 {} \;
  ( cd $PKG/usr/info
   if [ -f dir ];then
     rm dir
   fi
   if [ -f dir.gz ];then
    rm dir.gz
   fi )
fi

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a \
  AUTHORS COPYING* INSTALL LICENCE NEWS README TODO \
  $PKG/usr/doc/$PKGNAM-$VERSION
( cd $PKG/usr/doc/$PKGNAM-$VERSION &&  rm -rf examples/ && mv LICENCE LICENSE )
cat $CWD/$PKGNAM.SlackBuild > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild

find $PKG/usr/doc -type f -exec chmod 644 {} \;
find $PKG/usr/doc -type d -exec chmod 755 {} \;
find $PKG/usr/doc/$PKGNAM-$VERSION -type f -size 0 -print0 | xargs -0 rm -f
chown -R root:root $PKG/usr/doc/$PKGNAM-$VERSION

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD.${PKGTYPE:-txz}
